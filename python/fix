#!/bin/python3

# labels
#
# This is a command line tool to generate sheets of labels.
# A single argument gives the mount-id of the starting label
# and it fills the sheet from there.
#
# Tom Trebisky  7-23-2024

import sys
import os

from Micros import Micros
#from Labels import Labelsheet

#if len(sys.argv) > 1 :
#    id = sys.argv[1]
#else :
#    id = "08-149"

m = Micros ()

# This returns a tuple
#mt = m.lookup ( id )
#ml = list ( mt )

fix_id = 274
my_hash = {}
my_hash['myid'] = "08-144"
m.update ( fix_id, my_hash )

fix_id = 279

my_hash = {}
my_hash['associations'] = "Vanadinite"
my_hash['location'] = "Los Lamentos, Chihuahua, Mexico"
m.update ( fix_id, my_hash )

m.close ()

#mm = tuple ( ml )
#
#print ( type(ml) )
#print ( mm )
#
#for i in range ( len(mm) ) :
#    print ( i, " >", mm[i] )


    # schema gives:
    # (0, 'id', 'INTEGER', 1, None, 1)
    # (1, 'myid', 'varchar(255)', 0, None, 0)
    # (2, 'species', 'varchar(255)', 0, None, 0)
    # (3, 'associations', 'varchar(255)', 0, None, 0)
    # (4, 'location', 'varchar(255)', 0, None, 0)
    # (5, 'notes', 'TEXT', 0, None, 0)
    # (6, 'origin', 'varchar(255)', 0, None, 0)
    # (7, 'source', 'varchar(255)', 0, None, 0)
    # (8, 'owner', 'varchar(255)', 0, None, 0)
    # (9, 'status', 'varchar(255)', 0, None, 0)
    # (10, 'label_info', 'varchar(255)', 0, None, 0)
    # (11, 'created_at', 'datetime', 0, None, 0)
    # (12, 'updated_at', 'datetime', 0, None, 0)


# THE END
